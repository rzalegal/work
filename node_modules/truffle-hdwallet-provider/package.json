{
  "_args": [
    [
      "truffle-hdwallet-provider@web3-one",
      "/home/vlatt/Рабочий стол/dev"
    ]
  ],
  "_from": "truffle-hdwallet-provider@web3-one",
  "_hasShrinkwrap": false,
  "_id": "truffle-hdwallet-provider@1.0.0-web3one.5",
  "_inCache": true,
  "_installable": true,
  "_location": "/truffle-hdwallet-provider",
  "_nodeVersion": "11.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/truffle-hdwallet-provider_1.0.0-web3one.5_1545084511924_0.0996282217517448"
  },
  "_npmUser": {
    "email": "cruz.adam.molina@gmail.com",
    "name": "cruzmolina"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "name": "truffle-hdwallet-provider",
    "raw": "truffle-hdwallet-provider@web3-one",
    "rawSpec": "web3-one",
    "scope": null,
    "spec": "web3-one",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/truffle-hdwallet-provider/-/truffle-hdwallet-provider-1.0.0-web3one.5.tgz",
  "_shasum": "0cf43be6a237ed50ccc7137a2b830e45341dc0a6",
  "_shrinkwrap": null,
  "_spec": "truffle-hdwallet-provider@web3-one",
  "_where": "/home/vlatt/Рабочий стол/dev",
  "author": {
    "email": "tim.coulter@consensys.net",
    "name": "Tim Coulter"
  },
  "bugs": {
    "url": "https://github.com/trufflesuite/truffle-hdwallet-provider/issues"
  },
  "dependencies": {},
  "description": "HD Wallet-enabled Web3 provider",
  "devDependencies": {
    "any-promise": "^1.3.0",
    "bindings": "^1.3.1",
    "bip39": "^2.2.0",
    "ethereumjs-tx": "^1.3.7",
    "ethereumjs-util": "^5.2.0",
    "ethereumjs-wallet": "^0.6.2",
    "ganache-core": "^2.3.1",
    "js-scrypt": "^0.2.0",
    "mocha": "^5.1.1",
    "web3": "^1.0.0-beta.37",
    "web3-provider-engine": "git+https://github.com/cgewecke/provider-engine.git#web3-one",
    "webpack": "^4.24.0",
    "webpack-cli": "^3.1.2"
  },
  "directories": {},
  "dist": {
    "fileCount": 9,
    "integrity": "sha512-mALnG1ahfqPFufwzNcxW6JxSzgP+FwSyHr8kFtBE/ymMH8N6S2EeUPFds7a2IKyTMZ3npTMHLTR+seTQitn2yQ==",
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcGB5gCRA9TVsSAnZWagAADA4P/3C2agRhg6Ly/eXQwqew\n9PlQO2Dj6FkzxYkhOyWdP+GL1O5h+IwD39AtcSSwsxDgFiFJkCoQff+Xt2F0\nnsai5rz+oePQ6QoDbUlcoR4WKMOLQbUPXZR8qFheF9itNKx8uuPqlGcu/0Vp\n+DdctUZLzRBuPx3mdhHsBZrVLu01W8do3pLdJKh/mLd0atr4geY6qWfn9nZs\nRoPOBEiVjMZHbPWoowpf9bRKu6dAmTmXABRviujQrWXWBsKT0MuuRPyDFNyn\nPbKM3Ke3gsRuhh7LeL5p0v4iDICZvFVHlcYa4H1GNGj5Mb9igkX7V7ukVS24\nBf0HLrB4MHOkdyIlAsq3K0Bq5S5uJpKgGp5czW59XANrOeENppS7lYxAkmxh\naBF+Vz66erq3lQVs9v67weLAcbLW6l4zfrOYtU1G56CHqTkVfHw84/2eXM19\nqW5NZSP0+T4PZF7upeWyIa8jQyLcBVSjkS+cOl0I++y+aaRwD2IOeZGlfN7f\nn/4wEsxXvggBDpjVzCdThZ/DMjYDooIrygSuoqJi//Jdj8MbaPYowYsJ2726\nVgVrtk/d0PNc+gZyUqIFkibaTmkTNBNPrYEIcSn/JBiyMFgN7vvYhfehdcZy\ncrdD+AgDwDBI5ytifQ0zBFyla+Y4XHHMz8Nqr5Q5UNoU6y5cTI6Bn6RnFhgB\n4FQ7\r\n=8weA\r\n-----END PGP SIGNATURE-----\r\n",
    "shasum": "0cf43be6a237ed50ccc7137a2b830e45341dc0a6",
    "tarball": "https://registry.npmjs.org/truffle-hdwallet-provider/-/truffle-hdwallet-provider-1.0.0-web3one.5.tgz",
    "unpackedSize": 46572025
  },
  "gitHead": "f9f25a2d491394ac3df1bab56f9c743d871a1059",
  "homepage": "https://github.com/trufflesuite/truffle-hdwallet-provider#readme",
  "keywords": [
    "etheruem",
    "hd",
    "mnemonic",
    "provider",
    "wallet"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "benjamincburns",
      "email": "benjamin.c.burns@gmail.com"
    },
    {
      "name": "cruzmolina",
      "email": "cruz.adam.molina@gmail.com"
    },
    {
      "name": "davidmurdoch",
      "email": "david@davidmurdoch.com"
    },
    {
      "name": "eggplantzzz",
      "email": "pobol234@gmail.com"
    },
    {
      "name": "gnidan",
      "email": "nick@gnidan.org"
    },
    {
      "name": "seesemichaelj",
      "email": "seesemichaelj@gmail.com"
    },
    {
      "name": "tcoulter",
      "email": "tim@timothyjcoulter.com"
    }
  ],
  "name": "truffle-hdwallet-provider",
  "optionalDependencies": {},
  "readme": "# truffle-hdwallet-provider\nHD Wallet-enabled Web3 provider. Use it to sign transactions for addresses derived from a 12 or 24 word mnemonic.\n\n## Install\n\n```\n$ npm install truffle-hdwallet-provider\n```\n\n## Requirements\n```\nNode >= 7.6\n```\n\n## General Usage\n\nYou can use this provider wherever a Web3 provider is needed, not just in Truffle. For Truffle-specific usage, see next section.\n\n```javascript\nvar HDWalletProvider = require(\"truffle-hdwallet-provider\");\nvar mnemonic = \"mountains supernatural bird...\"; // 12 word mnemonic\nvar provider = new HDWalletProvider(mnemonic, \"http://localhost:8545\");\n\n// Or, alternatively pass in a zero-based address index.\nvar provider = new HDWalletProvider(mnemonic, \"http://localhost:8545\", 5);\n\n// Or, use your own hierarchical derivation path\nvar provider = new HDWalletProvider(mnemonic, \"http://localhost:8545\", 5, 1, \"m/44'/137'/0'/0/\");\n\n// ...\n// Write your code here.\n// ...\n\n// At termination, `provider.engine.stop()' should be called to finish the process elegantly.\nprovider.engine.stop();\n```\n\nBy default, the `HDWalletProvider` will use the address of the first address that's generated from the mnemonic. If you pass in a specific index, it'll use that address instead.\n\nParameters:\n\n| Parameter | Type | Default | Required | Description |\n| ------ | ---- | ------- | ----------- | ----------- |\n| `mnemonic` | *`string*` | null | [x] | 12 word mnemonic which addresses are created from. |\n| `provider` | `string\\|object` | `null` | [x] | URI or Ethereum client to send all other non-transaction-related Web3 requests |\n| `address_index` | `number` | `0` | [ ] | If specified, will tell the provider to manage the address at the index specified |\n| `num_addresses` | `number` | `1` | [ ] | If specified, will create `number` addresses when instantiated |\n| `shareNonce` | `boolean` | `true` | [ ] | If false, a new WalletProvider will track its own nonce-state |\n| `wallet_hdpath` | `string` | `\"m/44'/60'/0'/0/\"` | [ ] | If specified, will tell the wallet engine what derivation path should use to derive addresses. |\n\n\n### Private Keys\n\nInstead of a mnemonic, you can alternatively provide a private key or array of private keys as the first parameter. When providing an array, `address_index` and `num_addresses` are fully supported.\n\n```javascript\nvar HDWalletProvider = require(\"truffle-hdwallet-provider\");\n//load single private key as string\nvar provider = new HDWalletProvider(\"3f841bf589fdf83a521e55d51afddc34fa65351161eead24f064855fc29c9580\", \"http://localhost:8545\");\n\n// Or, pass an array of private keys, and optionally use a certain subset of addresses\nvar privateKeys = [\n  \"3f841bf589fdf83a521e55d51afddc34fa65351161eead24f064855fc29c9580\",\n  \"9549f39decea7b7504e15572b2c6a72766df0281cea22bd1a3bc87166b1ca290\",\n];\nvar provider = new HDWalletProvider(privateKeys, \"http://localhost:8545\", 0, 2); //start at address_index 0 and load both addresses\n```\n**NOTE: This is just an example. NEVER hard code production/mainnet private keys in your code or commit them to git. They should always be loaded from environment variables or a secure secret management system.**\n\n## Truffle Usage\n\nYou can easily use this within a Truffle configuration. For instance:\n\ntruffle.js\n```javascript\nvar HDWalletProvider = require(\"truffle-hdwallet-provider\");\n\nvar mnemonic = \"mountains supernatural bird ...\";\n\nmodule.exports = {\n  networks: {\n    development: {\n      host: \"localhost\",\n      port: 8545,\n      network_id: \"*\" // Match any network id\n    },\n    ropsten: {\n      // must be a thunk, otherwise truffle commands may hang in CI\n      provider: () =>\n        new HDWalletProvider(mnemonic, \"https://ropsten.infura.io/\"),\n      network_id: '3',\n    }\n  }\n};\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/trufflesuite/truffle-hdwallet-provider.git"
  },
  "scripts": {
    "prepare": "npx webpack --config webpack/webpack.config.js",
    "publish:web3-one": "npm publish --tag web3-one",
    "test": "mocha --timeout 5000"
  },
  "version": "1.0.0-web3one.5"
}
